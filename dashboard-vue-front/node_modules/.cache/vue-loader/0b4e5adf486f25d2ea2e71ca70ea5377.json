{"remainingRequest":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue?vue&type=style&index=0&id=22ba47ca&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue","mtime":1735234868304},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1732292154104},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1732206487253},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1732206476149},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732292152562},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1732206487238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBBam91dCBkdSBzdHlsZSBkaXJlY3RlbWVudCBkYW5zIGxlIEhUTUwgcG91ciBsZSB0ZXh0ZSB2YWx1ZSAqLw0KLmN1c3RvbS12YWx1ZS1jYXJkIC52YWx1ZSB7DQogIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue"],"names":[],"mappings":";AA41BA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB","file":"C:/Users/djibril.marwan/Downloads/analyse/FIABILISATION/Fiabilisation_text_mining/dashboard-vue-front/src/views/Dashboard.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"py-4 container-fluid\">\r\n    \r\n    <div class=\"row\">\r\n      <div\r\n        class=\"d-flex flex-column align-items-center justify-content-center\"\r\n        style=\"height: 20h; background-color: white; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); margin: 10px; border-radius: 8px; padding: 50px;\"\r\n      >\r\n        <div class=\"mb-3 d-flex align-items-center\" style=\"margin-top: 20px;\">\r\n          <h3>Saisir un fichier</h3>\r\n          <div style=\"flex-grow: 1; margin-left: 10px;\">\r\n            <input type=\"file\" id=\"file-upload\" class=\"form-control\" style=\"border: 2px solid red;\" />\r\n          </div>\r\n          <span id=\"validation-icon\" class=\"d-none\" style=\"font-size: 20px; color: green; margin-left: 10px;\">✔</span>\r\n        </div>\r\n\r\n        <button\r\n          class=\"btn\"\r\n          id=\"upload-button\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; border: none;\"\r\n        >\r\n          Valider\r\n        </button>\r\n\r\n        <button \r\n          v-if=\"isValidationComplete\"\r\n          @click=\"downloadInvalidFile\" \r\n          class=\"btn btn-primary mt-3\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; border: none;\"\r\n        >\r\n          <i class=\"fas fa-download\"></i> <!-- Icône de téléchargement -->\r\n        </button>\r\n\r\n\r\n        <div id=\"spinner\" class=\"d-none\" style=\"font-size: 24px; color: red; margin-left: 10px;\">\r\n          <i class=\"fa fa-spinner fa-spin\"></i> Chargement...\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row d-flex justify-content-between\">\r\n      <!-- Affichage des statistiques -->\r\n      <div class=\"col-xl-2.5 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"Nombre de comptes\"\r\n          :value=\"totalRows\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-muted',\r\n          }\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white;\"\r\n          :title-style=\"{ color: 'white' }\"\r\n          :value-style=\"{ color: 'white' }\"\r\n          :percentage-style=\"{ color: 'white' }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-2.5 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"Nom du fichier\"\r\n          :value=\"fileName || 'Aucun fichier chargé'\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-muted',\r\n          }\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white;\"\r\n          :title-style=\"{ color: 'white' }\"\r\n          :value-style=\"{ color: 'white' }\"\r\n          :percentage-style=\"{ color: 'white' }\"\r\n          direction-reverse\r\n          class=\"custom-value-card\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button \r\n          v-if=\"isValidationComplete\"\r\n          @click=\"downloadInvalidFile\" \r\n          class=\"btn btn-primary mt-3\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; border: none;\"\r\n        \r\n        >\r\n          Télécharger les données invalides\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row d-flex justify-content-between\">\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"Nombre de compte avec erreurs \"\r\n          :value=\"rowsWithErrors\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"Nombres total d'erreurs comptes\"\r\n          :value=\"totalErrors\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0\">\r\n        <mini-statistics-card\r\n          title=\"Pourcentage de CC ayant des erreurs \"\r\n          :value=\"`${percentage_cc_with_errors}%`\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"Pourcentage d'agences ayant des erreurs\"\r\n          :value=\"`${percentage_agences_with_errors}%`\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <br>\r\n    <h5>Types d'erreurs</h5>\r\n    <hr style=\"border: 2px solid gray;\">\r\n    <br>\r\n\r\n    <div class=\"row d-flex justify-content-between\">\r\n      <div\r\n        v-for=\"(error, index) in errorSummary\"\r\n        :key=\"index\"\r\n        class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\"\r\n      >\r\n        <mini-statistics-card\r\n          :title=\"columnTitles[error.column] || error.column\" \r\n          :value=\"error.count\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Détails des Erreurs commises par les CC</h5>\r\n            <!-- Filtre CC -->\r\n            <div class=\"mb-3\">\r\n              <label for=\"filterCC\" class=\"form-label\">Filtrer par CC :</label>\r\n              <select id=\"filterCC\" v-model=\"selectedCC\" class=\"form-select\" style=\"font-family: 'Arial', sans-serif; font-size: 14px;\">\r\n                <option value=\"\">Tous les CC</option>\r\n                <option v-for=\"cc in uniqueCCs\" :key=\"cc\" :value=\"cc\" style=\"font-family: 'Arial', sans-serif; font-size: 14px;\">{{ cc }}</option>\r\n              </select>\r\n            </div>\r\n            <button \r\n              @click=\"exportTableToExcel\"\r\n              class=\"btn btn-success\"\r\n              style=\"background: linear-gradient(310deg, #4CAF50 0%, #2E7D32 100%); color: white; border: none;\"\r\n            >\r\n              <i class=\"fas fa-file-excel\"></i> Exporter en Excel\r\n            </button>\r\n            <!-- Conteneur pour le défilement -->\r\n            <div style=\"max-height: 400px; overflow-y: auto;\">\r\n              <table class=\"table table-bordered\" style=\"border: 1px solid black; border-collapse: collapse;\">\r\n                <thead style=\"position: sticky; top: 0; background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; z-index: 2;\">\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>CC</th>\r\n                    <th>Tél</th>\r\n                    <th>Email</th>\r\n                    <th>Sexe/Genre</th>\r\n                    <th>Représentant</th>\r\n                    <th>Agence</th>\r\n                    <th>Total Erreurs Agence</th>\r\n                    <th>Pourcentage Par Agence</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr \r\n                    v-for=\"(ccError, index) in filteredErrors\" \r\n                    :key=\"ccError.CC\" \r\n                    :class=\"{ 'text-danger': ccError.Pourcentage > 1 }\"\r\n                  >\r\n                    <td>{{ index + 1 }}</td>\r\n                    <td>{{ ccError.CC }}</td>\r\n                    <td>{{ ccError['Format du Numéro de Téléphone Invalide'] }}</td>\r\n                    <td>{{ ccError['Domaine ou Format de l\\'Email Invalide'] }}</td>\r\n                    <td>{{ ccError['Sexe ou Genre Incorrect ou Manquant pour Entreprise'] }}</td>\r\n                    <td>{{ ccError['Représentant Légal Manquant'] }}</td>\r\n                    <td>{{ ccError.Agence }}</td>\r\n                    <td>{{ ccError['Total Erreurs Agence'] }}</td>\r\n                    <td>{{ ccError['Pourcentage Par Agence'].toFixed(2) }}%</td>\r\n                  </tr>\r\n                  <!-- Ligne Total -->\r\n                  <tr style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; font-weight: bold;\">\r\n                    <td colspan=\"2\">Total</td>\r\n                    <td>{{ totalTel }}</td>\r\n                    <td>{{ totalEmail }}</td>\r\n                    <td>{{ totalSexeGenre }}</td>\r\n                    <td>{{ totalRepresentant }}</td>\r\n                    <td>—</td>\r\n                    <td>{{ totalErreursAgence }}</td>\r\n                    <td>{{ totalPourcentageAgence > 100 ? 100 : totalPourcentageAgence }}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <!-- Fin du conteneur -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <br>\r\n    <hr style=\"border: 2px solid gray;\">\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Détails des Erreurs commises par les agences</h5>\r\n            <button \r\n              @click=\"exportAgenceTableToExcel\"\r\n              class=\"btn btn-success\"\r\n              style=\"background: linear-gradient(310deg, #4CAF50 0%, #2E7D32 100%); color: white; border: none;\"\r\n            >\r\n              <i class=\"fas fa-file-excel\"></i> Exporter en Excel\r\n            </button>\r\n            <!-- Conteneur avec défilement pour la table -->\r\n            <div style=\"max-height: 400px; overflow-y: auto;\">\r\n              <table class=\"table table-bordered\" style=\"border: 1px solid black; border-collapse: collapse;\">\r\n                <thead style=\"position: sticky; top: 0; background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%) ;color : white ; z-index: 2;\">\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Agence</th>\r\n                    <th>Tél</th>\r\n                    <th>Email</th>\r\n                    <th>Sexe/Genre</th>\r\n                    <th>Représentant</th>\r\n                    <th>Nombre de CC</th>\r\n                    <th>Total</th>\r\n                    <th>Pourcentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(agenceError, index) in agenceErrorCounts\" :key=\"agenceError.Agence\" :class=\"{ 'text-danger': agenceError.Pourcentage > 1 }\">\r\n                    <td>{{ index + 1 }}</td>\r\n                    <td>{{ agenceError.Agence }}</td>\r\n                    <td>{{ agenceError['Format du Numéro de Téléphone Invalide'] }}</td>\r\n                    <td>{{ agenceError['Domaine ou Format de l\\'Email Invalide'] }}</td>\r\n                    <td>{{ agenceError['Sexe ou Genre Incorrect ou Manquant pour Entreprise'] }}</td>\r\n                    <td>{{ agenceError['Représentant Légal Manquant'] }}</td>\r\n                    <td>{{ agenceError['Nombre de CC'] }}</td>\r\n                    <td>\r\n                      {{ agenceError['Total Erreurs'] }}\r\n                    </td>\r\n                    <td>\r\n                      {{ (agenceError.Pourcentage).toFixed(2) }}%\r\n                    </td>\r\n                  </tr>\r\n                  <tr style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; font-weight: bold;\">\r\n                    <td colspan=\"2\">Totaux</td>\r\n                    <td>{{ calculateTotal('Format du Numéro de Téléphone Invalide', 'agence') }}</td>\r\n                    <td>{{ calculateTotal('Domaine ou Format de l\\'Email Invalide', 'agence') }}</td>\r\n                    <td>{{ calculateTotal('Sexe ou Genre Incorrect ou Manquant pour Entreprise', 'agence') }}</td>\r\n                    <td>{{ calculateTotal('Représentant Légal Manquant', 'agence') }}</td>\r\n                    <td>{{ calculateTotal('Nombre de CC', 'agence') }}</td>\r\n                    <td>{{ calculateTotal('Total Erreurs', 'agence') }}</td>\r\n                    <td>\r\n                      {{ calculatePercentageTotal('Pourcentage', 'agence').toFixed(2) }}%\r\n                    </td>\r\n                  </tr>\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <!-- Fin du conteneur -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-4 row\">\r\n      <div class=\"mb-6 col-lg-12\">\r\n        <div class=\"card z-index-2\">\r\n          <div class=\"p-3 card-body\">\r\n            <!-- Replace the reports-bar-chart with a canvas -->\r\n            <canvas id=\"agenceChart\" width=\"400\" height=\"200\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Diagramme circulaire du pourcentage d'erreur par CC -->\r\n      <div class=\"col-lg-6 col-md-6 mb-4\">\r\n        <div class=\"card z-index-2\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Pourcentage d'Erreur par CC</h5>\r\n            <canvas id=\"ccErrorChart\" width=\"400\" height=\"400\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Diagramme circulaire du pourcentage de CC avec erreurs -->\r\n      <div class=\"col-lg-6 col-md-6 mb-4\">\r\n        <div class=\"card z-index-2\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Pourcentage de CC ayant des erreurs</h5>\r\n            <canvas id=\"ccWithErrorChart\" width=\"400\" height=\"400\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"col-lg-4 col-md-6\">\r\n        <timeline-list \r\n          class=\"h-100\"\r\n          title=\"Classement des CC ayant commis le plus d'erreurs\"\r\n          :description=\"`<span class='icon-left'><span v-if='showIcon'>🔻</span> Les hauts totaux d'erreurs</span>`\"\r\n          :showIcon=\"true\"\r\n        >\r\n          <timeline-item\r\n            v-for=\"(cc, index) in ccPodium\"\r\n            :key=\"index\"\r\n            :color=\"getPodiumColor(index)\"\r\n            :icon=\"index === 0 ? 'fa fa-star' : index === 1 ? 'fa fa-star-half-alt' : index === 2 ? 'fa fa-star-of-david' : 'fa fa-star-o'\"\r\n            :title=\"`${cc.CC} (${cc['Total Erreurs']} erreurs)`\"\r\n            :date-time=\"`Pourcentage: ${cc.Pourcentage.toFixed(2)}%`\"\r\n          />\r\n        </timeline-list>\r\n      </div>\r\n\r\n    </div>\r\n    <canvas id=\"agenceChart\" width=\"400\" height=\"200\"></canvas>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Chart from \"chart.js/auto\";\r\nimport * as XLSX from \"xlsx\";\r\nimport MiniStatisticsCard from \"@/examples/Cards/MiniStatisticsCard.vue\";\r\n// import ReportsBarChart from \"@/examples/Charts/ReportsBarChart.vue\";\r\nimport TimelineList from \"./components/TimelineList.vue\";\r\nimport TimelineItem from \"./components/TimelineItem.vue\";\r\n// import ProjectsCard from \"./components/ProjectsCard.vue\";\r\nexport default {\r\n  components: {\r\n    MiniStatisticsCard,\r\n    // ReportsBarChart,\r\n    // ProjectsCard,\r\n    TimelineList,\r\n    TimelineItem,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      totalRows: 0,\r\n      rowsWithErrors: 0,\r\n      totalErrors: 0,\r\n      errorSummary: [],\r\n      columnTitles: {\r\n        \"Format du Numéro de Téléphone Invalide\": \"Téléphone Invalide\",\r\n        \"Domaine ou Format de l'Email Invalide\": \"Email Invalide\",\r\n        \"Sexe ou Genre Incorrect ou Manquant pour Entreprise\": \"Sexe/Genre\",\r\n        \"Représentant Légal Manquant\": \"Représentant \",\r\n      },\r\n      ccErrorCounts: [],\r\n      agenceErrorCounts: [],\r\n      iconBackground: '#5E72E4',\r\n      percentage_cc_with_errors : 0,\r\n      percentage_agences_with_errors : 0,\r\n      agenceLabels: [], // Labels pour le graphique\r\n      agenceTotals: [],\r\n      ccPodium: [],\r\n      fileName: \"\",\r\n      downloadLink: \"\",\r\n      isValidationComplete: false,\r\n      selectedCC: \"\",\r\n\r\n    };\r\n  },\r\n\r\n  computed: { \r\n    // Liste unique des CC pour le filtre\r\n    uniqueCCs() {\r\n      return [...new Set(this.ccErrorCounts.map(cc => cc.CC))];\r\n    },\r\n    \r\n    // Regroupement des données par CC et Agence\r\n    groupedErrors() {\r\n      const grouped = {};\r\n\r\n      // Regroupement des erreurs par CC et Agence\r\n      this.ccErrorCounts.forEach((ccError) => {\r\n        const key = `${ccError.CC}-${ccError.Agence}`;\r\n        if (!grouped[key]) {\r\n          grouped[key] = { ...ccError };\r\n        } else {\r\n          grouped[key][\"Total Erreurs Agence\"] += ccError[\"Total Erreurs Agence\"];\r\n          grouped[key][\"Format du Numéro de Téléphone Invalide\"] += ccError[\"Format du Numéro de Téléphone Invalide\"];\r\n          grouped[key][\"Domaine ou Format de l'Email Invalide\"] += ccError[\"Domaine ou Format de l'Email Invalide\"];\r\n          grouped[key][\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"] += ccError[\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"];\r\n          grouped[key][\"Représentant Légal Manquant\"] += ccError[\"Représentant Légal Manquant\"];\r\n\r\n          // Mise à jour du pourcentage, recalculé selon la somme totale des erreurs\r\n          grouped[key][\"Pourcentage Par Agence\"] = (\r\n            (grouped[key][\"Total Erreurs Agence\"] / this.ccErrorCounts.length) * 100\r\n          ).toFixed(2);\r\n        }\r\n      });\r\n\r\n      return Object.values(grouped);\r\n    },\r\n    \r\n    // Données filtrées selon le CC sélectionné\r\n    filteredErrors() {\r\n      if (this.selectedCC) {\r\n        return this.groupedErrors.filter(cc => cc.CC === this.selectedCC);\r\n      }\r\n      return this.groupedErrors;\r\n    },\r\n    \r\n    // Calcul des totaux pour les colonnes\r\n    totalTel() {\r\n      return this.filteredErrors.reduce((sum, cc) => sum + (cc[\"Format du Numéro de Téléphone Invalide\"] || 0), 0);\r\n    },\r\n    totalEmail() {\r\n      return this.filteredErrors.reduce((sum, cc) => sum + (cc[\"Domaine ou Format de l'Email Invalide\"] || 0), 0);\r\n    },\r\n    totalSexeGenre() {\r\n      return this.filteredErrors.reduce((sum, cc) => sum + (cc[\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"] || 0), 0);\r\n    },\r\n    totalRepresentant() {\r\n      return this.filteredErrors.reduce((sum, cc) => sum + (cc[\"Représentant Légal Manquant\"] || 0), 0);\r\n    },\r\n    totalErreursAgence() {\r\n      return this.filteredErrors.reduce((sum, cc) => sum + (cc[\"Total Erreurs Agence\"] || 0), 0);\r\n    },\r\n    totalPourcentageAgence() {\r\n      const totalPourcentage = this.filteredErrors.reduce((sum, cc) => sum + (cc[\"Pourcentage Par Agence\"] || 0), 0);\r\n\r\n      // Limiter le pourcentage total à 100% si nécessaire\r\n      return totalPourcentage > 100 ? 100 : totalPourcentage.toFixed(2);\r\n    }\r\n  },\r\n\r\n\r\n  methods: {\r\n\r\n    createChart() {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.destroy();\r\n      }\r\n      if (this.ccErrorChart) {\r\n        this.ccErrorChart.destroy();\r\n      }\r\n      if (this.ccWithErrorChart) {\r\n        this.ccWithErrorChart.destroy();\r\n      }\r\n\r\n      // Crée le graphique des erreurs par agence\r\n      console.log(\"Creating chart with data:\", this.agenceErrorCounts);\r\n      const agenceChartCtx = document.getElementById(\"agenceChart\").getContext(\"2d\");\r\n      const labels = this.agenceErrorCounts.map(agence => agence.Agence);\r\n      const data = this.agenceErrorCounts.map(agence => agence['Total Erreurs']);\r\n      \r\n      if (this.chartInstance) {\r\n        this.chartInstance.destroy();\r\n      }\r\n\r\n      this.chartInstance = new Chart(agenceChartCtx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: 'Total Erreurs par Agence',\r\n            data: data,\r\n            backgroundColor: '#ec2d2d', /* Rouge sombre */\r\n            borderColor: '#8a1c1c', /* Rouge légèrement plus clair */\r\n\r\n            borderWidth: 1,\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      // Crée le graphique circulaire pour le pourcentage d'erreur par CC\r\n      const ccErrorChartCtx = document.getElementById(\"ccErrorChart\").getContext(\"2d\");\r\n      const ccErrorData = this.ccErrorCounts.map(cc => cc.Pourcentage);\r\n      const ccErrorLabels = this.ccErrorCounts.map(cc => cc.CC);\r\n      \r\n      this.ccErrorChart = new Chart(ccErrorChartCtx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: ccErrorLabels,\r\n          datasets: [{\r\n            data: ccErrorData,\r\n            backgroundColor: ccErrorData.map(() => this.getRandomColor()), // Génère des couleurs aléatoires\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(tooltipItem) {\r\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      // Crée le graphique circulaire pour le pourcentage de CC avec erreurs\r\n      const ccWithErrorChartCtx = document.getElementById(\"ccWithErrorChart\").getContext(\"2d\");\r\n      const ccWithErrorCount = this.ccErrorCounts.filter(cc => cc.Pourcentage > 0).length;\r\n      const ccTotalCount = this.ccErrorCounts.length;\r\n      const ccWithErrorPercentage = (ccWithErrorCount / ccTotalCount) * 100;\r\n      const ccWithoutErrorPercentage = 100 - ccWithErrorPercentage;\r\n\r\n      this.ccWithErrorChart = new Chart(ccWithErrorChartCtx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: ['CC avec erreurs', 'CC sans erreurs'],\r\n          datasets: [{\r\n            data: [ccWithErrorPercentage, ccWithoutErrorPercentage],\r\n            backgroundColor: ['#FF5733', '#d9d9d9'],\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(tooltipItem) {\r\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    },\r\n\r\n    getRandomColor() {\r\n      const letters = '0123456789ABCDEF';\r\n      let color = '#';\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      return color;\r\n    },\r\n\r\n\r\n    getPodiumColor(index) {\r\n      if (index === 0) return \"gold\";\r\n      if (index === 1) return \"silver\";\r\n      if (index === 2) return \"bronze\";\r\n      return \"secondary\";\r\n    },\r\n\r\n    async uploadFile() {\r\n      const fileInput = document.getElementById('file-upload');\r\n      const validationIcon = document.getElementById('validation-icon');\r\n      \r\n      // Ajout d'une classe de bordure verte et fond de couleur pour indiquer la sélection du fichier\r\n      fileInput.style.border = \"2px solid green\";\r\n      fileInput.style.backgroundColor = \"#d4edda\";\r\n      \r\n      const file = fileInput.files[0];\r\n\r\n      if (!file) {\r\n        alert(\"Veuillez sélectionner un fichier.\");\r\n        return;\r\n      }\r\n\r\n      this.fileName = file.name;\r\n\r\n      // Affichage du spinner et désactivation du bouton d'upload\r\n      document.getElementById(\"spinner\").classList.remove(\"d-none\");\r\n      document.getElementById(\"file-upload\").disabled = true;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        // Envoi du fichier vers l'API\r\n        const response = await fetch('http://localhost:8000/validate-excel/', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        // Masquer le spinner et réactiver l'input\r\n        document.getElementById(\"spinner\").classList.add(\"d-none\");\r\n        document.getElementById(\"file-upload\").disabled = false;\r\n\r\n        if (response.ok) {\r\n          // Affichage de l'icône de validation en cas de succès\r\n          validationIcon.classList.remove(\"d-none\"); // Affiche l'icône de validation\r\n          validationIcon.style.color = \"green\"; // Change la couleur de l'icône en vert\r\n          this.updateStats(result.result); // Mise à jour des stats ou résultats\r\n          this.downloadLink = result.result.download_link;\r\n          this.isValidationComplete = true;\r\n        } else {\r\n          // Masquer l'icône et indiquer l'échec si nécessaire\r\n          validationIcon.classList.add(\"d-none\");\r\n          console.error(`Erreur : ${result.message}`);\r\n        }\r\n      } catch (error) {\r\n        // Si une erreur se produit lors de la requête, afficher un message d'erreur\r\n        console.error('Erreur:', error);\r\n        validationIcon.classList.add(\"d-none\"); // Masquer l'icône si une erreur se produit\r\n        alert(\"Une erreur est survenue lors de l'envoi du fichier.\");\r\n\r\n        // Masquer le spinner et réactiver le bouton\r\n        document.getElementById(\"spinner\").classList.add(\"d-none\");\r\n        document.getElementById(\"file-upload\").disabled = false;\r\n      }\r\n    }\r\n\r\n,\r\n  \r\n    updateStats(result) {\r\n          this.totalRows = result.total_rows;\r\n          this.rowsWithErrors = result.rows_with_errors;\r\n          this.totalErrors = result.total_errors;\r\n          this.errorSummary = result.error_summary;\r\n          // this.ccErrorCounts = result.cc_error_counts.map((item) => ({\r\n          //   ...item,\r\n          //   Pourcentage: item.Pourcentage || 0, // Par défaut à 0 si non fourni\r\n          // }));\r\n\r\n          this.ccErrorCounts = result.cc_error_counts\r\n          .map((item) => ({\r\n            ...item,\r\n            Pourcentage: item.Pourcentage || 0, // Par défaut à 0 si non fourni\r\n          }))\r\n          .filter((item) => item['Total Erreurs'] > 0); // Filtrer ceux avec un total supérieur à 0\r\n\r\n          this.agenceErrorCounts = result.agence_error_counts || [];\r\n          this.agenceLabels = this.agenceErrorCounts.map((item) => item.Agence);\r\n          this.agenceTotals = this.agenceErrorCounts.map((item) => item['Total Erreurs']);\r\n          \r\n          console.log(\"agenceLabels:\", this.agenceLabels);\r\n          console.log(\"agenceTotals:\", this.agenceTotals);\r\n\r\n          this.percentage_cc_with_errors = result.percentage_cc_with_errors;\r\n          this.percentage_agences_with_errors = result.percentage_agences_with_errors;\r\n          this.ccPodium = result.cc_error_counts\r\n            .filter(cc => cc.Pourcentage > 5) // Filtrer les CC avec un pourcentage supérieur à 5%\r\n            .sort((a, b) => b['Total Erreurs'] - a['Total Erreurs']) // Trier par total d'erreurs\r\n\r\n          const labels = [...this.agenceLabels];\r\n          const totals = [...this.agenceTotals];\r\n\r\n          console.log(\"Labels normaux :\", labels);\r\n          console.log(\"Données normales :\", totals);\r\n\r\n          if (!result.agence_error_counts || result.agence_error_counts.length === 0) {\r\n            console.error(\"Aucune donnée trouvée pour les erreurs par agence.\");\r\n            return;\r\n          }\r\n          this.createChart();\r\n        },\r\n      \r\n    async downloadInvalidFile() {\r\n        try {\r\n            const response = await fetch('http://localhost:8000/download-invalid-file/', {\r\n                method: 'GET',\r\n            });\r\n\r\n            if (response.ok) {\r\n                const blob = await response.blob();\r\n                const downloadUrl = window.URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = downloadUrl;\r\n                a.download = \"invalid_data.xlsx\"; // Nom du fichier\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                a.remove();\r\n            } else {\r\n                const result = await response.json();\r\n                alert(result.message || \"Erreur lors du téléchargement du fichier.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur lors du téléchargement :\", error);\r\n            alert(\"Une erreur est survenue lors du téléchargement du fichier.\");\r\n        }\r\n    },\r\n\r\n      exportTableToExcel() {\r\n        // Transformez les données pour sélectionner ou renommer les colonnes spécifiques\r\n        const data = this.ccErrorCounts.map((item, index) => ({\r\n          ID: index + 1,\r\n          CC: item.CC,\r\n          \"Tél\": item['Format du Numéro de Téléphone Invalide'],\r\n          \"Email\": item['Domaine ou Format de l\\'Email Invalide'],\r\n          \"Sexe/Genre\": item['Sexe ou Genre Incorrect ou Manquant pour Entreprise'],\r\n          Représentant: item['Représentant Légal Manquant'],\r\n          Agence: item.Agence,\r\n          \"Total Erreurs Agence\": item['Total Erreurs Agence'],\r\n          \"Pourcentage par Agence\": (item['Pourcentage Par Agence']).toFixed(2) + \" %\", // Assurez-vous que ce nom est unique\r\n        }));\r\n\r\n        // Crée une nouvelle feuille Excel avec des colonnes bien définies\r\n        const worksheet = XLSX.utils.json_to_sheet(data);\r\n\r\n        // Ajoute des titres de colonnes (facultatif)\r\n        const columns = [\r\n          \"ID\",\r\n          \"CC\",\r\n          \"Tél\",\r\n          \"Email\",\r\n          \"Sexe/Genre\",\r\n          \"Représentant\",\r\n          \"Agence\",\r\n          \"Total Erreurs Agence\",\r\n          \"Pourcentage par Agence\",\r\n        ];\r\n        XLSX.utils.sheet_add_aoa(worksheet, [columns], { origin: \"A1\" });\r\n\r\n        // Crée un classeur Excel\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Détails des Erreurs\");\r\n\r\n        // Génère et télécharge le fichier Excel\r\n        const fileName = \"erreurs_cc.xlsx\";\r\n        XLSX.writeFile(workbook, fileName);\r\n      },\r\n\r\n      exportAgenceTableToExcel() {\r\n      // Préparation des données du tableau\r\n      const data = this.agenceErrorCounts.map((item, index) => ({\r\n        ID: index + 1,\r\n        Agence: item.Agence,\r\n        \"Tél\": item['Format du Numéro de Téléphone Invalide'],\r\n        \"Email\": item['Domaine ou Format de l\\'Email Invalide'],\r\n        \"Sexe/Genre\": item['Sexe ou Genre Incorrect ou Manquant pour Entreprise'],\r\n        Représentant: item['Représentant Légal Manquant'],\r\n        \"Nombre de CC\": item['Nombre de CC'],\r\n        \"Total Erreurs\": item['Total Erreurs'],\r\n        // Formate le Pourcentage en pourcentage avec deux décimales\r\n        Pourcentage: (item.Pourcentage).toFixed(2) + \" %\",\r\n      }));\r\n\r\n      // Crée une nouvelle feuille Excel avec les données\r\n      const worksheet = XLSX.utils.json_to_sheet(data);\r\n\r\n      // Ajoute des titres de colonnes (facultatif)\r\n      const columns = [\r\n        \"ID\",\r\n        \"Agence\",\r\n        \"Tél\",\r\n        \"Email\",\r\n        \"Sexe/Genre\",\r\n        \"Représentant\",\r\n        \"Nombre de CC\",\r\n        \"Total Erreurs\",\r\n        \"Pourcentage\",\r\n      ];\r\n      XLSX.utils.sheet_add_aoa(worksheet, [columns], { origin: \"A1\" });\r\n\r\n      // Crée un classeur Excel\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Erreurs par Agence\");\r\n\r\n      // Génère et télécharge le fichier Excel\r\n      const fileName = \"erreurs_agence.xlsx\";\r\n      XLSX.writeFile(workbook, fileName);\r\n    },\r\n\r\n    calculateTotal(column, type) {\r\n      // Vérification du type pour calculer uniquement pour le tableau choisi\r\n      if (type === 'cc') {\r\n        return this.ccErrorCounts.reduce((sum, ccError) => {\r\n          return sum + (ccError[column] || 0);\r\n        }, 0);\r\n      } else if (type === 'agence') {\r\n        return this.agenceErrorCounts.reduce((sum, agenceError) => {\r\n          return sum + (agenceError[column] || 0);\r\n        }, 0);\r\n      }\r\n      return 0; // Retourne 0 si le type est invalide\r\n    },\r\n\r\n    calculatePercentageTotal(column, type) {\r\n      // Vérification du type pour calculer uniquement pour le tableau choisi\r\n      if (type === 'cc') {\r\n        return this.ccErrorCounts.reduce((sum, ccError) => {\r\n          return sum + (ccError[column] || 0);\r\n        }, 0);\r\n      } else if (type === 'agence') {\r\n        return this.agenceErrorCounts.reduce((sum, agenceError) => {\r\n          return sum + (agenceError[column] || 0);\r\n        }, 0);\r\n      }\r\n      return 0; // Retourne 0 si le type est invalide\r\n    }\r\n\r\n\r\n},\r\n\r\n  mounted() {\r\n    document.getElementById('upload-button').addEventListener('click', this.uploadFile);\r\n    console.log(\"agenceErrorCounts:\", this.agenceErrorCounts);\r\n\r\n    this.$nextTick(() => {\r\n      this.createChart(); // Create chart after data is set\r\n    });\r\n    },\r\n  \r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Ajout du style directement dans le HTML pour le texte value */\r\n.custom-value-card .value {\r\n  color: white !important;\r\n}\r\n</style>"]}]}