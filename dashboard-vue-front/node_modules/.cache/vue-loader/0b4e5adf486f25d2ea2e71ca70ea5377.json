{"remainingRequest":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue?vue&type=style&index=0&id=22ba47ca&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue","mtime":1736944645871},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1736249820520},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1736249836386},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1736249826946},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1736249809227},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1736249836372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIEFqb3V0IGR1IHN0eWxlIGRpcmVjdGVtZW50IGRhbnMgbGUgSFRNTCBwb3VyIGxlIHRleHRlIHZhbHVlICovCi5jdXN0b20tdmFsdWUtY2FyZCAudmFsdWUgewogIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue"],"names":[],"mappings":";AA2tCA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB","file":"C:/Users/djibril.marwan/Downloads/analyse/FIABILISATION/Fiabilisation_text_mining/dashboard-vue-front/src/views/Dashboard.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"py-4 container-fluid\">\n\n    <div class=\"row\">\n      <div\n        class=\"d-flex flex-column align-items-center justify-content-center\"\n        style=\"\n          height: 20h;\n          background-color: white;\n          box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n          margin: 10px;\n          border-radius: 8px;\n          padding: 50px;\n        \"\n      >\n        <div class=\"mb-3 d-flex align-items-center\" style=\"margin-top: 20px\">\n          <h3>Saisir un fichier</h3>\n          <div style=\"flex-grow: 1; margin-left: 10px\">\n            <input\n              type=\"file\"\n              id=\"file-upload\"\n              class=\"form-control\"\n              style=\"border: 2px solid red\"\n            />\n          </div>\n          <span\n            id=\"validation-icon\"\n            class=\"d-none\"\n            style=\"font-size: 20px; color: green; margin-left: 10px\"\n            >âœ”</span\n          >\n        </div>\n\n        <!-- Champ de sÃ©lection des pays -->\n        <div class=\"mb-3\" style=\"width: 100%\">\n          <label for=\"country-select\" class=\"form-label\">SÃ©lectionnez un pays :</label>\n          <select\n            id=\"country-select\"\n            v-model=\"selectedCountry\"\n            class=\"form-control\"\n            style=\"font-family: 'Arial', sans-serif; font-size: 14px\"\n          >\n            <option value=\"\" disabled>-- SÃ©lectionnez un pays --</option>\n            <option value=\"ðŸ‡§ðŸ‡« COFINA Burkina\">ðŸ‡§ðŸ‡« COFINA Burkina</option>\n            <option value=\"ðŸ‡¨ðŸ‡® CASH DEAL CÃ´te d'Ivoire\">ðŸ‡¨ðŸ‡® CASH DEAL CÃ´te d'Ivoire</option>\n            <option value=\"ðŸ‡¨ðŸ‡® COFINA CÃ´te d'Ivoire\">ðŸ‡¨ðŸ‡® COFINA CÃ´te d'Ivoire</option>\n            <option value=\"ðŸ‡¨ðŸ‡® Fin'ELLE\">ðŸ‡¨ðŸ‡® Fin'ELLE</option>\n            <option value=\"ðŸ‡¨ðŸ‡² COFINA Cameroun\">ðŸ‡¨ðŸ‡² COFINA Cameroun</option>\n            <option value=\"ðŸ‡¨ðŸ‡¬ COFINA Congo\">ðŸ‡¨ðŸ‡¬ COFINA Congo</option>\n            <option value=\"ðŸ‡¬ðŸ‡¦ COFINA Gabon\">ðŸ‡¬ðŸ‡¦ COFINA Gabon</option>\n            <option value=\"ðŸ‡¬ðŸ‡³ COFINA GuinÃ©e\">ðŸ‡¬ðŸ‡³ COFINA GuinÃ©e</option>\n            <option value=\"ðŸ‡²ðŸ‡± COFINA Mali\">ðŸ‡²ðŸ‡± COFINA Mali</option>\n            <option value=\"ðŸ‡²ðŸ‡± CASH DEAL Mali\">ðŸ‡²ðŸ‡± CASH DEAL Mali</option>\n            <option value=\"ðŸ‡¸ðŸ‡³ COFINA SÃ©nÃ©gal\">ðŸ‡¸ðŸ‡³ COFINA SÃ©nÃ©gal</option>\n            <option value=\"ðŸ‡¸ðŸ‡³ CASH DEAL SÃ©nÃ©gal\">ðŸ‡¸ðŸ‡³ CASH DEAL SÃ©nÃ©gal</option>\n            <option value=\"ðŸ‡¹ðŸ‡¬ COFINA Togo\">ðŸ‡¹ðŸ‡¬ COFINA Togo</option>\n          </select>\n        </div>\n\n        <button\n          class=\"btn\"\n          id=\"upload-button\"\n          style=\"\n            background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n            color: white;\n            border: none;\n          \"\n          @click=\"uploadFile\"\n        >\n          Valider\n        </button>\n\n        <button\n          v-if=\"isValidationComplete\"\n          @click=\"downloadInvalidFile\"\n          class=\"btn btn-primary mt-3\"\n          style=\"\n            background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n            color: white;\n            border: none;\n          \"\n        >\n          <i class=\"fas fa-download\"></i>\n          <!-- IcÃ´ne de tÃ©lÃ©chargement -->\n        </button>\n\n        <div\n          id=\"spinner\"\n          class=\"d-none\"\n          style=\"font-size: 24px; color: red; margin-left: 10px\"\n        >\n          <i class=\"fa fa-spinner fa-spin\"></i> Chargement...\n        </div>\n      </div>\n    </div>\n\n\n\n    <div class=\"row d-flex justify-content-between\">\n      <!-- Affichage des statistiques -->\n      <div class=\"col-xl-2.5 col-sm-6 mb-xl-0 mb-4\">\n        <mini-statistics-card\n          title=\"Nombre de comptes\"\n          :value=\"totalRows\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-muted',\n          }\"\n          style=\"\n            background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n            color: white;\n          \"\n          :title-style=\"{ color: 'gray', fontWeight: 'bold' }\"\n          :value-style=\"{ color: 'white' }\"\n          :percentage-style=\"{ color: 'white' }\"\n          direction-reverse\n        />\n      </div>\n      <div class=\"col-xl-2.5 col-sm-6 mb-xl-0 mb-4\">\n        <mini-statistics-card\n          title=\"Nom du fichier\"\n          :value=\"fileName || 'Aucun fichier chargÃ©'\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-muted',\n          }\"\n          style=\"\n            background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n            color: white;\n          \"\n          :title-style=\"{ color: 'white' }\"\n          :value-style=\"{ color: 'white' }\"\n          :percentage-style=\"{ color: 'white' }\"\n          direction-reverse\n          class=\"custom-value-card\"\n        />\n      </div>\n      <div class=\"col-xl-2.5 col-sm-6 mb-xl-0 mb-4\">\n        <mini-statistics-card\n          title=\"Filiale\"\n          :value=\"selectedCountry\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-muted',\n          }\"\n          style=\"\n            background-color: white; color: #ec2d2d\"\n          :title-style=\"{ color: 'gray', fontWeight: 'bold' }\"\n          :value-style=\"{ color: 'white' }\"\n          :percentage-style=\"{ color: 'white' }\"\n          direction-reverse\n        />\n      </div>\n      <div>\n        <button\n          v-if=\"isValidationComplete\"\n          @click=\"downloadInvalidFile\"\n          class=\"btn btn-primary mt-3\"\n          style=\"\n            background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n            color: black;\n            border: none;\n          \"\n        >\n          TÃ©lÃ©charger les donnÃ©es invalides\n        </button>\n      </div>\n    </div>\n    <div class=\"row d-flex justify-content-between\">\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\n        <mini-statistics-card\n          title=\"Nombre de compte avec erreurs \"\n          :value=\"rowsWithErrors\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-danger',\n          }\"\n          style=\"background-color: white; color: #ec2d2d\"\n          direction-reverse\n        />\n      </div>\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\n        <mini-statistics-card\n          title=\"Nombres total d'erreurs comptes\"\n          :value=\"totalErrors\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-danger',\n          }\"\n          :icon=\"{\n            component: 'ni ni-alert-circle-exc',\n            background: iconBackground,\n          }\"\n          style=\"background-color: white; color: #ec2d2d\"\n          direction-reverse\n        />\n      </div>\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0\">\n        <mini-statistics-card\n          title=\"Pourcentage de CC ayant des erreurs \"\n          :value=\"`${percentage_cc_with_errors}%`\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-danger',\n          }\"\n          :icon=\"{\n            component: 'ni ni-alert-circle-exc',\n            background: iconBackground,\n          }\"\n          style=\"background-color: white; color: #ec2d2d\"\n          direction-reverse\n        />\n      </div>\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\n        <mini-statistics-card\n          title=\"Pourcentage d'agences ayant des erreurs\"\n          :value=\"`${percentage_agences_with_errors}%`\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-danger',\n          }\"\n          :icon=\"{\n            component: 'ni ni-alert-circle-exc',\n            background: iconBackground,\n          }\"\n          style=\"background-color: white; color: #ec2d2d\"\n          direction-reverse\n        />\n      </div>\n    </div>\n\n    <br />\n    <h5>Types d'erreurs</h5>\n    <hr style=\"border: 2px solid gray\" />\n    <br />\n\n    <div class=\"row d-flex justify-content-between\">\n      <div\n        v-for=\"(error, index) in errorSummary\"\n        :key=\"index\"\n        class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\"\n      >\n        <mini-statistics-card\n          :title=\"columnTitles[error.column] || error.column\"\n          :value=\"error.count\"\n          :percentage=\"{\n            value: 'N/A',\n            color: 'text-danger',\n          }\"\n          :icon=\"{\n            component: 'ni ni-alert-circle-exc',\n            background: iconBackground,\n          }\"\n          style=\"\n            background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n            color: white;\n          \"\n          direction-reverse\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">DÃ©tails des erreurs commises par les CC</h5>\n            <!-- Filtre CC -->\n            <div class=\"mb-3\">\n              <label for=\"filterCC\" class=\"form-label\">Filtrer par CC :</label>\n              <select\n                id=\"filterCC\"\n                v-model=\"selectedCC\"\n                class=\"form-select\"\n                style=\"font-family: 'Arial', sans-serif; font-size: 14px\"\n              >\n                <option value=\"\">Tous les CC</option>\n                <option\n                  v-for=\"cc in uniqueCCs\"\n                  :key=\"cc\"\n                  :value=\"cc\"\n                  style=\"font-family: 'Arial', sans-serif; font-size: 14px\"\n                >\n                  {{ cc }}\n                </option>\n              </select>\n            </div>\n            <button\n              @click=\"exportTableToExcel\"\n              class=\"btn btn-success\"\n              style=\"\n                background: linear-gradient(310deg, #4caf50 0%, #2e7d32 100%);\n                color: white;\n                border: none;\n              \"\n            >\n              <i class=\"fas fa-file-excel\"></i> Exporter en Excel\n            </button>\n            <!-- Conteneur pour le dÃ©filement -->\n            <div style=\"max-height: 400px; overflow-y: auto\">\n              <table\n                class=\"table table-bordered\"\n                style=\"border: 1px solid black; border-collapse: collapse\"\n              >\n                <thead\n                  style=\"\n                    position: sticky;\n                    top: 0;\n                    background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n                    color: white;\n                    z-index: 2;\n                  \"\n                >\n                  <tr>\n                    <th>ID</th>\n                    <th>CC</th>\n                    <th>TÃ©l</th>\n                    <th>Email</th>\n                    <th>Sexe/Genre</th>\n                    <th>ReprÃ©sentant</th>\n                    <th>Agence</th>\n                    <th>Total erreurs egence</th>\n                    <th>Taux d'erreurs du CC</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-for=\"(ccError, index) in filteredErrors\"\n                    :key=\"generateUniqueId(index, ccError.CC)\"\n                    :class=\"{ 'text-danger': ccError.Pourcentage > 1 }\"\n                  >\n                    <td>{{ index + 1 }}</td>\n                    <td>{{ ccError.CC }}</td>\n                    <td>\n                      {{ ccError[\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"] }}\n                    </td>\n                    <td>\n                      {{ ccError[\"Domaine ou Format de l'Email Invalide\"] }}\n                    </td>\n                    <td>\n                      {{\n                        ccError[\n                          \"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"\n                        ]\n                      }}\n                    </td>\n                    <td>{{ ccError[\"ReprÃ©sentant LÃ©gal Manquant\"] }}</td>\n                    <td>{{ ccError.Agence }}</td>\n                    <td>{{ ccError[\"Total Erreurs Agence\"] }}</td>\n                    <td>{{ ccError[\"Pourcentage Par Agence\"].toFixed(2) }}%</td>\n                  </tr>\n                  <!-- Ligne Total -->\n                  <tr\n                    style=\"\n                      background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n                      color: white;\n                      font-weight: bold;\n                    \"\n                  >\n                    <td colspan=\"2\">Total</td>\n                    <td>{{ totalTel }}</td>\n                    <td>{{ totalEmail }}</td>\n                    <td>{{ totalSexeGenre }}</td>\n                    <td>{{ totalRepresentant }}</td>\n                    <td>â€”</td>\n                    <td>{{ totalErreursAgence }}</td>\n                    <td>\n                      {{\n                        totalPourcentageAgence > 100\n                          ? 100\n                          : totalPourcentageAgence\n                      }}%\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- Fin du conteneur -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <br />\n    <hr style=\"border: 2px solid gray\" />\n    <br />\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              DÃ©tails des erreurs commises par les agences\n            </h5>\n\n            <!-- Filtrer par Agence -->\n            <div class=\"mb-3\">\n              <label for=\"filterAgence\" class=\"form-label\"\n                >Filtrer par Agence :</label\n              >\n              <select\n                id=\"filterAgence\"\n                \n                v-model=\"selectedAgence\"\n                class=\"form-select\"\n                style=\"font-family: 'Arial', sans-serif; font-size: 14px\"\n              >\n                <option value=\"\">Toutes les Agences</option>\n                <option\n                  v-for=\"agence in uniqueAgences\"\n                  :key=\"agence\"\n                  :value=\"agence\"\n                  style=\"font-family: 'Arial', sans-serif; font-size: 14px\"\n                >\n                  {{ agence }}\n                </option>\n              </select>\n            </div>\n\n            <button\n              @click=\"exportAgenceTableToExcel\"\n              class=\"btn btn-success\"\n              style=\"\n                background: linear-gradient(310deg, #4caf50 0%, #2e7d32 100%);\n                color: white;\n                border: none;\n              \"\n            >\n              <i class=\"fas fa-file-excel\"></i> Exporter en Excel\n            </button>\n\n            <!-- Conteneur avec dÃ©filement pour la table -->\n            <div style=\"max-height: 400px; overflow-y: auto\">\n              <table\n                class=\"table table-bordered\"\n                style=\"border: 1px solid black; border-collapse: collapse\"\n              >\n                <thead\n                  style=\"\n                    position: sticky;\n                    top: 0;\n                    background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n                    color: white;\n                    z-index: 2;\n                  \"\n                >\n                  <tr>\n                    <th>ID</th>\n                    <th>Agence</th>\n                    <th>TÃ©l</th>\n                    <th>Email</th>\n                    <th>Sexe/Genre</th>\n                    <th>ReprÃ©sentant</th>\n                    <th>Nombre de CC</th>\n                    <th>Total</th>\n                    <th>Pourcentage</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-for=\"(agenceError, index) in filteredAgenceErrors\"\n                    :key=\"agenceError.Agence\"\n                    :class=\"{ 'text-danger': agenceError.Pourcentage > 1 }\"\n                  >\n                    <td>{{ index + 1 }}</td>\n                    <td>{{ agenceError.Agence }}</td>\n                    <td>\n                      {{\n                        agenceError[\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"]\n                      }}\n                    </td>\n                    <td>\n                      {{ agenceError[\"Domaine ou Format de l'Email Invalide\"] }}\n                    </td>\n                    <td>\n                      {{\n                        agenceError[\n                          \"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"\n                        ]\n                      }}\n                    </td>\n                    <td>{{ agenceError[\"ReprÃ©sentant LÃ©gal Manquant\"] }}</td>\n                    <td>{{ agenceError[\"Nombre de CC\"] }}</td>\n                    <td>\n                      {{ agenceError[\"Total Erreurs\"] }}\n                    </td>\n                    <td>{{ agenceError.Pourcentage.toFixed(2) }}%</td>\n                  </tr>\n                  <tr\n                    style=\"\n                      background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%);\n                      color: white;\n                      font-weight: bold;\n                    \"\n                  >\n                    <td colspan=\"2\">Totaux</td>\n                    <td>\n                      {{\n                        calculateTotal(\n                          \"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\",\n                          \"agence\"\n                        )\n                      }}\n                    </td>\n                    <td>\n                      {{\n                        calculateTotal(\n                          \"Domaine ou Format de l'Email Invalide\",\n                          \"agence\"\n                        )\n                      }}\n                    </td>\n                    <td>\n                      {{\n                        calculateTotal(\n                          \"Sexe ou Genre Incorrect ou Manquant pour Entreprise\",\n                          \"agence\"\n                        )\n                      }}\n                    </td>\n                    <td>\n                      {{\n                        calculateTotal(\"ReprÃ©sentant LÃ©gal Manquant\", \"agence\")\n                      }}\n                    </td>\n                    <td>{{ calculateTotal(\"Nombre de CC\", \"agence\") }}</td>\n                    <td>{{ calculateTotal(\"Total Erreurs\", \"agence\") }}</td>\n                    <td>\n                      {{\n                        calculatePercentageTotal(\n                          \"Pourcentage\",\n                          \"agence\"\n                        ).toFixed(2)\n                      }}%\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- Fin du conteneur -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mt-4 row\">\n      <div class=\"mb-6 col-lg-12\">\n        <div class=\"card z-index-2\">\n          <div class=\"p-3 card-body\">\n            <!-- Replace the reports-bar-chart with a canvas -->\n            <canvas id=\"agenceChart\" width=\"400\" height=\"200\"></canvas>\n          </div>\n        </div>\n      </div>\n\n      <!-- Diagramme circulaire du pourcentage d'erreur par CC -->\n      <div class=\"col-lg-6 col-md-6 mb-4\">\n        <div class=\"card z-index-2\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Pourcentage d'Erreur par CC</h5>\n            <canvas id=\"ccErrorChart\" width=\"400\" height=\"400\"></canvas>\n          </div>\n        </div>\n      </div>\n\n      <!-- Diagramme circulaire du pourcentage de CC avec erreurs -->\n      <div class=\"col-lg-6 col-md-6 mb-4\">\n        <div class=\"card z-index-2\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Pourcentage de CC ayant des erreurs</h5>\n            <canvas id=\"ccWithErrorChart\" width=\"400\" height=\"400\"></canvas>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-6 col-md-6 mb-4\">\n        <timeline-list\n          class=\"h-100\"\n          title=\"Classement des CC ayant commis le plus d'erreurs\"\n          :description=\"`<span class='icon-left' style='font-size: 1.5em; vertical-align: middle; ><span v-if='showIcon'>ðŸ”»</span> Les hauts totaux d'erreurs</span>`\"\n          :showIcon=\"true\"\n        >\n          <timeline-item\n            v-for=\"(cc, index) in ccPodium\"\n            :key=\"index\"\n            :color=\"getPodiumColor(index)\"\n            :icon=\"`${\n              index === 0\n                ? 'fa fa-star'\n                : index === 1\n                ? 'fa fa-star-half-alt'\n                : index === 2\n                ? 'fa fa-star-of-david'\n                : 'fa fa-star-o'\n            }`\"\n            :title=\"`${cc.CC} (${cc['Total Erreurs']} erreurs)`\"\n            :date-time=\"`Pourcentage: ${cc.Pourcentage.toFixed(2)}%`\"\n            :style=\"{ fontSize: '1.5em' }\"\n          />\n        </timeline-list>\n      </div>\n      <div class=\"col-lg-6 col-md-6 mb-4\">\n        <div class=\"card z-index-2\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Pourcentage d'Agence ayant des erreurs</h5>\n            <canvas id=\"agenceWithErrorChart\" width=\"400\" height=\"400\"></canvas>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Chart from \"chart.js/auto\";\nimport * as XLSX from \"xlsx\";\nimport MiniStatisticsCard from \"@/examples/Cards/MiniStatisticsCard.vue\";\n// import ReportsBarChart from \"@/examples/Charts/ReportsBarChart.vue\";\nimport TimelineList from \"./components/TimelineList.vue\";\nimport TimelineItem from \"./components/TimelineItem.vue\";\n// import ProjectsCard from \"./components/ProjectsCard.vue\";\nexport default {\n  components: {\n    MiniStatisticsCard,\n    // ReportsBarChart,\n    // ProjectsCard,\n    TimelineList,\n    TimelineItem,\n  },\n\n  data() {\n    return {\n      totalRows: 0,\n      rowsWithErrors: 0,\n      totalErrors: 0,\n      errorSummary: [],\n      columnTitles: {\n        \"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\": \"TÃ©lÃ©phone Invalide\",\n        \"Domaine ou Format de l'Email Invalide\": \"Email Invalide\",\n        \"Sexe ou Genre Incorrect ou Manquant pour Entreprise\": \"Sexe/Genre\",\n        \"ReprÃ©sentant LÃ©gal Manquant\": \"ReprÃ©sentant \",\n      },\n      ccErrorCounts: [],\n      agenceErrorCounts: [],\n      iconBackground: \"#5E72E4\",\n      percentage_cc_with_errors: 0,\n      percentage_agences_with_errors: 0,\n      agenceLabels: [], // Labels pour le graphique\n      agenceTotals: [],\n      ccPodium: [],\n      fileName: \"\",\n      downloadLink: \"\",\n      isValidationComplete: false,\n      selectedCC: \"\",\n      selectedAgence: \"\",\n      selectedCountry: '',\n      countryEmoji: \"\",\n      countryName: \"\", \n    };\n  },\n\n  methods: {\n    createChart() {\n      if (this.chartInstance) {\n        this.chartInstance.destroy();\n      }\n      if (this.ccErrorChart) {\n        this.ccErrorChart.destroy();\n      }\n      if (this.ccWithErrorChart) {\n        this.ccWithErrorChart.destroy();\n      }\n      if (this.agenceWithErrorChart) {\n        this.agenceWithErrorChart.destroy();\n      }\n\n      // CrÃ©e le graphique des erreurs par agence\n      console.log(\"Creating chart with data:\", this.agenceErrorCounts);\n      const agenceChartCtx = document\n        .getElementById(\"agenceChart\")\n        .getContext(\"2d\");\n      const labels = this.agenceErrorCounts.map((agence) => agence.Agence);\n      const data = this.agenceErrorCounts.map(\n        (agence) => agence[\"Total Erreurs\"]\n      );\n\n      if (this.chartInstance) {\n        this.chartInstance.destroy();\n      }\n\n      this.chartInstance = new Chart(agenceChartCtx, {\n        type: \"bar\",\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: \"Total Erreurs par Agence\",\n              data: data,\n              backgroundColor: \"#ec2d2d\" /* Rouge sombre */,\n              borderColor: \"#8a1c1c\" /* Rouge lÃ©gÃ¨rement plus clair */,\n\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n\n      // CrÃ©e le graphique circulaire pour le pourcentage d'erreur par CC\n      const ccErrorChartCtx = document\n        .getElementById(\"ccErrorChart\")\n        .getContext(\"2d\");\n      const ccErrorData = this.ccErrorCounts.map((cc) => cc.Pourcentage);\n      const ccErrorLabels = this.ccErrorCounts.map((cc) => cc.CC);\n\n      this.ccErrorChart = new Chart(ccErrorChartCtx, {\n        type: \"pie\",\n        data: {\n          labels: ccErrorLabels,\n          datasets: [\n            {\n              data: ccErrorData,\n              backgroundColor: ccErrorData.map(() => this.getRandomColor()), // GÃ©nÃ¨re des couleurs alÃ©atoires\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\n                },\n              },\n            },\n          },\n        },\n      });\n\n      // CrÃ©e le graphique circulaire pour le pourcentage de CC avec erreurs\n      const ccWithErrorChartCtx = document\n        .getElementById(\"ccWithErrorChart\")\n        .getContext(\"2d\");\n      const ccWithErrorCount = this.ccErrorCounts.filter(\n        (cc) => cc.Pourcentage > 0\n      ).length;\n      const ccTotalCount = this.ccErrorCounts.length;\n      const ccWithErrorPercentage = (ccWithErrorCount / ccTotalCount) * 100;\n      const ccWithoutErrorPercentage = 100 - ccWithErrorPercentage;\n\n      this.ccWithErrorChart = new Chart(ccWithErrorChartCtx, {\n        type: \"pie\",\n        data: {\n          labels: [\"CC avec erreurs\", \"CC sans erreurs\"],\n          datasets: [\n            {\n              data: [ccWithErrorPercentage, ccWithoutErrorPercentage],\n              backgroundColor: [\"#FF5733\", \"#d9d9d9\"],\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\n                },\n              },\n            },\n          },\n        },\n      });\n\n      // CrÃ©e le graphique circulaire pour le pourcentage d'agence avec erreurs\n      const agenceWithErrorChartCtx = document\n        .getElementById(\"agenceWithErrorChart\")\n        .getContext(\"2d\");\n      const agenceWithErrorCount = this.agenceErrorCounts.filter(\n        (agence) => agence[\"Pourcentage\"] > 0\n      ).length;\n      const agenceTotalCount = this.agenceErrorCounts.length;\n      const agenceWithErrorPercentage =\n        (agenceWithErrorCount / agenceTotalCount) * 100;\n      const agenceWithoutErrorPercentage = 100 - agenceWithErrorPercentage;\n\n      this.agenceWithErrorChart = new Chart(agenceWithErrorChartCtx, {\n        type: \"pie\",\n        data: {\n          labels: [\"Agence avec erreurs\", \"Agence sans erreurs\"],\n          datasets: [\n            {\n              data: [agenceWithErrorPercentage, agenceWithoutErrorPercentage],\n              backgroundColor: [\"#FF5733\", \"#d9d9d9\"],\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\n                },\n              },\n            },\n          },\n        },\n      });\n    },\n\n    getRandomColor() {\n      const letters = \"0123456789ABCDEF\";\n      let color = \"#\";\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    },\n\n    getPodiumColor(index) {\n      if (index === 0) return \"gold\";\n      if (index === 1) return \"silver\";\n      if (index === 2) return \"bronze\";\n      return \"secondary\";\n    },\n\n    generateUniqueId(index, base = \"\") {\n      return `${base}-${index}-${Math.random().toString(36).substr(2, 9)}`;\n    },\n\n    async uploadFile() {\n      const fileInput = document.getElementById(\"file-upload\");\n      const validationIcon = document.getElementById(\"validation-icon\");\n\n      // VÃ©rification si un pays a Ã©tÃ© sÃ©lectionnÃ©\n      if (!this.selectedCountry) {\n        alert(\"Veuillez sÃ©lectionner un pays avant de valider.\");\n        return;\n      }\n\n      const file = fileInput.files[0];\n      if (!file) {\n        alert(\"Veuillez sÃ©lectionner un fichier.\");\n        return;\n      }\n\n      this.fileName = file.name;\n\n      // Extraction de l'emoji et du nom du pays\n      const countryParts = this.selectedCountry.split(\" \"); // Diviser la sÃ©lection par espaces\n      this.countryEmoji = countryParts[0]; // L'emoji est toujours la premiÃ¨re partie\n      this.countryName = countryParts.slice(1).join(\" \"); // RecrÃ©er le nom du pays sans l'emoji\n\n      console.log(\"Pays sÃ©lectionnÃ© :\", this.countryName);\n      console.log(\"Emoji du pays :\", this.countryEmoji);\n\n      // Affichage du spinner et dÃ©sactivation du bouton d'upload\n      document.getElementById(\"spinner\").classList.remove(\"d-none\");\n      document.getElementById(\"file-upload\").disabled = true;\n\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"country\", this.selectedCountry); // Envoyer le pays sÃ©lectionnÃ©\n      formData.append(\"countryName\", this.countryName); // Envoyer uniquement le nom du pays\n      formData.append(\"countryEmoji\", this.countryEmoji); // Envoyer uniquement l'emoji\n\n      console.log(\"Pays sÃ©lectionnÃ© (selectedCountry) :\", this.selectedCountry);\n\n      console.log(\"Emoji du pays (countryEmoji) :\", this.countryEmoji);\n      console.log(\"Nom du pays (countryName) :\", this.countryName);\n\n      try {\n        const response = await fetch(\"http://localhost:8000/validate-excel/\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        const result = await response.json();\n\n        // Masquer le spinner et rÃ©activer le bouton\n        document.getElementById(\"spinner\").classList.add(\"d-none\");\n        document.getElementById(\"file-upload\").disabled = false;\n\n        if (response.ok) {\n          // Affichage de l'icÃ´ne de validation en cas de succÃ¨s\n          validationIcon.classList.remove(\"d-none\");\n          validationIcon.style.color = \"green\";\n          this.updateStats(result.result); // Mise Ã  jour des stats ou rÃ©sultats\n          this.downloadLink = result.result.download_link;\n          this.isValidationComplete = true;\n        } else {\n          validationIcon.classList.add(\"d-none\");\n          console.error(`Erreur : ${result.message}`);\n        }\n      } catch (error) {\n        console.error(\"Erreur:\", error);\n        validationIcon.classList.add(\"d-none\");\n        alert(\"Une erreur est survenue lors de l'envoi du fichier.\");\n        document.getElementById(\"spinner\").classList.add(\"d-none\");\n        document.getElementById(\"file-upload\").disabled = false;\n      }\n    },\n\n    updateStats(result) {\n      this.totalRows = result.total_rows;\n      this.rowsWithErrors = result.rows_with_errors;\n      this.totalErrors = result.total_errors;\n      this.errorSummary = result.error_summary;\n      // this.ccErrorCounts = result.cc_error_counts.map((item) => ({\n      //   ...item,\n      //   Pourcentage: item.Pourcentage || 0, // Par dÃ©faut Ã  0 si non fourni\n      // }));\n\n      this.ccErrorCounts = result.cc_error_counts.map((item) => ({\n        ...item,\n        Pourcentage: item.Pourcentage || 0, // Par dÃ©faut Ã  0 si non fourni\n      }));\n      // .filter((item) => item['Total Erreurs'] > 0) // Filtrer ceux avec un total supÃ©rieur Ã  0\n\n      this.agenceErrorCounts = result.agence_error_counts || [];\n      this.agenceLabels = this.agenceErrorCounts.map((item) => item.Agence);\n      this.agenceTotals = this.agenceErrorCounts.map(\n        (item) => item[\"Total Erreurs\"]\n      );\n\n      console.log(\"agenceLabels:\", this.agenceLabels);\n      console.log(\"agenceTotals:\", this.agenceTotals);\n\n      this.percentage_cc_with_errors = result.percentage_cc_with_errors;\n      this.percentage_agences_with_errors =\n        result.percentage_agences_with_errors;\n      this.ccPodium = Array.from(\n        new Map(\n          result.cc_error_counts\n            .filter((cc) => cc.Pourcentage > 5) // Filtrer les CC avec un pourcentage > 5%\n            .sort((a, b) => b[\"Total Erreurs\"] - a[\"Total Erreurs\"]) // Trier par 'Total Erreurs'\n            .map((cc) => [cc.CC, cc]) // Utiliser le champ 'CC' comme clÃ© pour garantir l'unicitÃ©\n        ).values()\n      );\n\n      const labels = [...this.agenceLabels];\n      const totals = [...this.agenceTotals];\n\n      console.log(\"Labels normaux :\", labels);\n      console.log(\"DonnÃ©es normales :\", totals);\n\n      if (\n        !result.agence_error_counts ||\n        result.agence_error_counts.length === 0\n      ) {\n        console.error(\"Aucune donnÃ©e trouvÃ©e pour les erreurs par agence.\");\n        return;\n      }\n      this.createChart();\n    },\n\n    async downloadInvalidFile() {\n      try {\n        const response = await fetch(\n          \"http://localhost:8000/download-invalid-file/\",\n          {\n            method: \"GET\",\n          }\n        );\n\n        if (response.ok) {\n          const blob = await response.blob();\n          const downloadUrl = window.URL.createObjectURL(blob);\n          const a = document.createElement(\"a\");\n          a.href = downloadUrl;\n\n          // Utilisation du nom du fichier par dÃ©faut (invalid_data suivi de fileName)\n          const defaultFileName = `invalid_data_${\n            this.fileName || \"default\"\n          }.xlsx`;\n\n          a.download = defaultFileName; // Nom dynamique basÃ© sur le fileName ou \"default\"\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          window.URL.revokeObjectURL(downloadUrl); // LibÃ©ration de l'URL\n        } else {\n          const result = await response.json();\n          alert(result.message || \"Erreur lors du tÃ©lÃ©chargement du fichier.\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du tÃ©lÃ©chargement :\", error);\n        alert(\"Une erreur est survenue lors du tÃ©lÃ©chargement du fichier.\");\n      }\n    },\n    exportTableToExcel() {\n      // Transformez les donnÃ©es pour sÃ©lectionner ou renommer les colonnes spÃ©cifiques\n      const data = this.ccErrorCounts.map((item, index) => ({\n        ID: index + 1,\n        CC: item.CC,\n        TÃ©l: item[\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"],\n        Email: item[\"Domaine ou Format de l'Email Invalide\"],\n        \"Sexe/Genre\":\n          item[\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"],\n        ReprÃ©sentant: item[\"ReprÃ©sentant LÃ©gal Manquant\"],\n        Agence: item.Agence,\n        \"Total Erreurs Agence\": item[\"Total Erreurs Agence\"],\n        \"Pourcentage par Agence\":\n          item[\"Pourcentage Par Agence\"].toFixed(2) + \" %\", // Assurez-vous que ce nom est unique\n      }));\n\n      // CrÃ©e une nouvelle feuille Excel avec des colonnes bien dÃ©finies\n      const worksheet = XLSX.utils.json_to_sheet(data);\n\n      // Ajoute des titres de colonnes (facultatif)\n      const columns = [\n        \"ID\",\n        \"CC\",\n        \"TÃ©l\",\n        \"Email\",\n        \"Sexe/Genre\",\n        \"ReprÃ©sentant\",\n        \"Agence\",\n        \"Total Erreurs Agence\",\n        \"Pourcentage par Agence\",\n      ];\n      XLSX.utils.sheet_add_aoa(worksheet, [columns], { origin: \"A1\" });\n\n      // CrÃ©e un classeur Excel\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"DÃ©tails des Erreurs\");\n\n      // GÃ©nÃ¨re et tÃ©lÃ©charge le fichier Excel\n      const fileName = \"erreurs_cc.xlsx\";\n      XLSX.writeFile(workbook, fileName);\n    },\n\n    exportAgenceTableToExcel() {\n      // PrÃ©paration des donnÃ©es du tableau\n      const data = this.agenceErrorCounts.map((item, index) => ({\n        ID: index + 1,\n        Agence: item.Agence,\n        TÃ©l: item[\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"],\n        Email: item[\"Domaine ou Format de l'Email Invalide\"],\n        \"Sexe/Genre\":\n          item[\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"],\n        ReprÃ©sentant: item[\"ReprÃ©sentant LÃ©gal Manquant\"],\n        \"Nombre de CC\": item[\"Nombre de CC\"],\n        \"Total Erreurs\": item[\"Total Erreurs\"],\n        // Formate le Pourcentage en pourcentage avec deux dÃ©cimales\n        Pourcentage: item.Pourcentage.toFixed(2) + \" %\",\n      }));\n\n      // CrÃ©e une nouvelle feuille Excel avec les donnÃ©es\n      const worksheet = XLSX.utils.json_to_sheet(data);\n\n      // Ajoute des titres de colonnes (facultatif)\n      const columns = [\n        \"ID\",\n        \"Agence\",\n        \"TÃ©l\",\n        \"Email\",\n        \"Sexe/Genre\",\n        \"ReprÃ©sentant\",\n        \"Nombre de CC\",\n        \"Total Erreurs\",\n        \"Pourcentage\",\n      ];\n      XLSX.utils.sheet_add_aoa(worksheet, [columns], { origin: \"A1\" });\n\n      // CrÃ©e un classeur Excel\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Erreurs par Agence\");\n\n      // GÃ©nÃ¨re et tÃ©lÃ©charge le fichier Excel\n      const fileName = \"erreurs_agence.xlsx\";\n      XLSX.writeFile(workbook, fileName);\n    },\n\n    calculateTotal(column, type) {\n      // VÃ©rification du type pour calculer uniquement pour le tableau choisi\n      if (type === \"cc\") {\n        return this.ccErrorCounts.reduce((sum, ccError) => {\n          return sum + (ccError[column] || 0);\n        }, 0);\n      } else if (type === \"agence\") {\n        return this.agenceErrorCounts.reduce((sum, agenceError) => {\n          return sum + (agenceError[column] || 0);\n        }, 0);\n      }\n      return 0; // Retourne 0 si le type est invalide\n    },\n\n    calculatePercentageTotal(column, type, totalErrors) {\n      // VÃ©rifie si le totalErrors est valide pour Ã©viter une division par zÃ©ro\n      if (!totalErrors || totalErrors <= 0) {\n        return 0; // Retourne 0 si le total des erreurs est invalide\n      }\n\n      let totalColumnErrors = 0;\n\n      // Calcul des erreurs en fonction du type\n      if (type === \"cc\") {\n        totalColumnErrors = this.ccErrorCounts.reduce((sum, ccError) => {\n          return sum + (ccError[column] || 0);\n        }, 0);\n      } else if (type === \"agence\") {\n        totalColumnErrors = this.agenceErrorCounts.reduce(\n          (sum, agenceError) => {\n            return sum + (agenceError[column] || 0);\n          },\n          0\n        );\n      }\n\n      // Calcul du pourcentage par rapport au total des erreurs\n      return ((totalColumnErrors / totalErrors) * 100).toFixed(2); // Pourcentage avec 2 dÃ©cimales\n    },\n  },\n\n  computed: {\n    // Liste unique des CC pour le filtre\n    uniqueAgences() {\n      // Retourne une liste unique des agences disponibles\n      return [...new Set(this.agenceErrorCounts.map((item) => item.Agence))];\n    },\n    filteredAgenceErrors() {\n      // Retourne les erreurs filtrÃ©es par agence\n      if (this.selectedAgence) {\n        return this.agenceErrorCounts.filter(\n          (item) => item.Agence === this.selectedAgence\n        );\n      }\n      return this.agenceErrorCounts;\n    },\n\n    uniqueCCs() {\n      return [...new Set(this.ccErrorCounts.map((cc) => cc.CC))];\n    },\n\n    // Regroupement des donnÃ©es par CC et Agence\n    groupedErrors() {\n      const grouped = {};\n\n      // Regroupement des erreurs par CC et Agence\n      this.ccErrorCounts.forEach((ccError) => {\n        const key = `${ccError.CC}-${ccError.Agence}`;\n        if (!grouped[key]) {\n          grouped[key] = { ...ccError };\n        } else {\n          grouped[key][\"Total Erreurs Agence\"] +=\n            ccError[\"Total Erreurs Agence\"];\n          grouped[key][\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"] +=\n            ccError[\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"];\n          grouped[key][\"Domaine ou Format de l'Email Invalide\"] +=\n            ccError[\"Domaine ou Format de l'Email Invalide\"];\n          grouped[key][\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"] +=\n            ccError[\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"];\n          grouped[key][\"ReprÃ©sentant LÃ©gal Manquant\"] +=\n            ccError[\"ReprÃ©sentant LÃ©gal Manquant\"];\n\n          // Mise Ã  jour du pourcentage, recalculÃ© selon la somme totale des erreurs\n          grouped[key][\"Pourcentage Par Agence\"] = (\n            (grouped[key][\"Total Erreurs Agence\"] / this.totalErrors) *\n            100\n          ).toFixed(2);\n        }\n      });\n\n      return Object.values(grouped);\n    },\n\n    // DonnÃ©es filtrÃ©es selon le CC sÃ©lectionnÃ©\n    filteredErrors() {\n      if (this.selectedCC) {\n        return this.groupedErrors.filter((cc) => cc.CC === this.selectedCC);\n      }\n      return this.groupedErrors;\n    },\n\n    // Calcul des totaux pour les colonnes\n    totalTel() {\n      return this.filteredErrors.reduce(\n        (sum, cc) => sum + (cc[\"Format du NumÃ©ro de TÃ©lÃ©phone Invalide\"] || 0),\n        0\n      );\n    },\n    totalEmail() {\n      return this.filteredErrors.reduce(\n        (sum, cc) => sum + (cc[\"Domaine ou Format de l'Email Invalide\"] || 0),\n        0\n      );\n    },\n    totalSexeGenre() {\n      return this.filteredErrors.reduce(\n        (sum, cc) =>\n          sum +\n          (cc[\"Sexe ou Genre Incorrect ou Manquant pour Entreprise\"] || 0),\n        0\n      );\n    },\n    totalRepresentant() {\n      return this.filteredErrors.reduce(\n        (sum, cc) => sum + (cc[\"ReprÃ©sentant LÃ©gal Manquant\"] || 0),\n        0\n      );\n    },\n    totalErreursAgence() {\n      return this.filteredErrors.reduce(\n        (sum, cc) => sum + (cc[\"Total Erreurs Agence\"] || 0),\n        0\n      );\n    },\n    totalPourcentageAgence() {\n      const totalErreursAgence = this.filteredErrors.reduce(\n        (sum, cc) => sum + (cc[\"Total Erreurs Agence\"] || 0),\n        0\n      );\n\n      // Limiter le pourcentage total Ã  100% si nÃ©cessaire\n      return ((totalErreursAgence / this.totalErrors) * 100).toFixed(2);\n    },\n  },\n\n  mounted() {\n    document\n      .getElementById(\"upload-button\")\n      .addEventListener(\"click\", this.uploadFile);\n    console.log(\"agenceErrorCounts:\", this.agenceErrorCounts);\n\n    this.$nextTick(() => {\n      this.createChart(); // Create chart after data is set\n    });\n  },\n};\n</script>\n\n<style scoped>\n/* Ajout du style directement dans le HTML pour le texte value */\n.custom-value-card .value {\n  color: white !important;\n}\n</style>\n"]}]}