{"remainingRequest":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue?vue&type=style&index=0&id=22ba47ca&lang=css","dependencies":[{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue","mtime":1734107505446},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1732292154104},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1732206487253},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1732206476149},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732292152562},{"path":"C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1732206487238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGFibGUgew0KICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOw0KICB3aWR0aDogMTAwJTsNCiAgZm9udC1zaXplOiAxNHB4Ow0KfQ0KDQoudGFibGUgdGgsDQoudGFibGUgdGQgew0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICBwYWRkaW5nOiA4cHg7DQp9DQoNCi50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCkgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5Ow0KfQ0KDQoudGFibGUtYm9yZGVyZWQgdGgsDQoudGFibGUtYm9yZGVyZWQgdGQgew0KICBib3JkZXI6IDFweCBzb2xpZCAjZGVlMmU2Ow0KfQ0K"},{"version":3,"sources":["C:\\Users\\djibril.marwan\\Downloads\\analyse\\FIABILISATION\\Fiabilisation_text_mining\\dashboard-vue-front\\src\\views\\Dashboard.vue"],"names":[],"mappings":";AAukBA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B","file":"C:/Users/djibril.marwan/Downloads/analyse/FIABILISATION/Fiabilisation_text_mining/dashboard-vue-front/src/views/Dashboard.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"py-4 container-fluid\">\r\n    \r\n    <div class=\"row\">\r\n      <div\r\n        class=\"d-flex flex-column align-items-center justify-content-center\"\r\n        style=\"height: 20h; background-color: white; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); margin: 10px; border-radius: 8px; padding: 50px;\"\r\n      >\r\n        <div class=\"mb-3 d-flex align-items-center\" style=\"margin-top: 20px;\">\r\n          <h3>Saisir un fichier</h3>\r\n          <div style=\"flex-grow: 1; margin-left: 10px;\">\r\n            <input type=\"file\" id=\"file-upload\" class=\"form-control\" style=\"border: 2px solid red;\" />\r\n          </div>\r\n          <span id=\"validation-icon\" class=\"d-none\" style=\"font-size: 20px; color: green; margin-left: 10px;\">✔</span>\r\n        </div>\r\n\r\n        <button\r\n          class=\"btn\"\r\n          id=\"upload-button\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white; border: none;\"\r\n        >\r\n          Envoyer\r\n        </button>\r\n        <div id=\"spinner\" class=\"d-none\" style=\"font-size: 24px; color: red; margin-left: 10px;\">\r\n          <i class=\"fa fa-spinner fa-spin\"></i> Chargement...\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row d-flex justify-content-between\">\r\n      <!-- Affichage des statistiques -->\r\n      <div class=\"col-xl-2.5 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"Nombre de lignes\"\r\n          :value=\"totalRows\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-muted',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-books',\r\n            background: iconBackground,\r\n          }\"\r\n          style=\"background: linear-gradient(310deg, #ad1717 0%, #ec2d2d 100%); color: white;\"\r\n          :title-style=\"{ color: 'white' }\"\r\n          :value-style=\"{ color: 'white' }\"\r\n          :percentage-style=\"{ color: 'white' }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row d-flex justify-content-between\">\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"lignes avec erreurs\"\r\n          :value=\"rowsWithErrors\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"nombes d'erreurs\"\r\n          :value=\"totalErrors\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0\">\r\n        <mini-statistics-card\r\n          title=\"CC avec erreur\"\r\n          :value=\"`${percentage_cc_with_errors}%`\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n      <div class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\">\r\n        <mini-statistics-card\r\n          title=\"agence avec erreur\"\r\n          :value=\"`${percentage_agences_with_errors}%`\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row d-flex justify-content-between\">\r\n      <div\r\n        v-for=\"(error, index) in errorSummary\"\r\n        :key=\"index\"\r\n        class=\"col-xl-3 col-sm-6 mb-xl-0 mb-4\"\r\n      >\r\n        <mini-statistics-card\r\n          :title=\"columnTitles[error.column] || error.column\" \r\n          :value=\"error.count\"\r\n          :percentage=\"{\r\n            value: 'N/A',\r\n            color: 'text-danger',\r\n          }\"\r\n          :icon=\"{\r\n            component: 'ni ni-alert-circle-exc',\r\n            background: iconBackground,\r\n          }\"\r\n          direction-reverse\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Détails des Erreurs CC</h5>\r\n            <div style=\"max-height: 400px; overflow-y: auto;\">\r\n              <table class=\"table table-striped table-bordered\">\r\n                <thead style=\"position: sticky; top: 0; background-color: #f8f9fa; z-index: 2;\">\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>CC</th>\r\n                    <th>Tél</th>\r\n                    <th>Email</th>\r\n                    <th>Sexe/Genre</th>\r\n                    <th>Représentant</th>\r\n                    <th>Agence</th>\r\n                    <th>Pourcentage Par Agence</th>\r\n                    <th>Total</th>\r\n                    <th>Pourcentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    v-for=\"(ccError, index) in filteredCCErrorCounts\"\r\n                    :key=\"ccError.CC\"\r\n                    :class=\"{ 'bg-danger text-white': ccError.Pourcentage > 1 }\"\r\n                  >\r\n                    <td>{{ index + 1 }}</td>\r\n                    <td>{{ ccError.CC }}</td>\r\n                    <td>{{ ccError['Format du Numéro de Téléphone Invalide'] }}</td>\r\n                    <td>{{ ccError['Domaine ou Format de l\\'Email Invalide'] }}</td>\r\n                    <td>{{ ccError['Sexe ou Genre Incorrect ou Manquant pour Entreprise'] }}</td>\r\n                    <td>{{ ccError['Représentant Légal Manquant'] }}</td>\r\n                    <td>{{ ccError.Agence }}</td>\r\n                    <td>{{ ccError['Pourcentage Par Agence'].toFixed(2) }}%</td>\r\n                    <td>{{ ccError['Total Erreurs'] }}</td>\r\n                    <td>{{ ccError.Pourcentage.toFixed(2) }}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <br>\r\n    <hr style=\"border: 2px solid gray;\">\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Détails des Erreurs Agence</h5>\r\n            <!-- Conteneur avec défilement pour la table -->\r\n            <div style=\"max-height: 400px; overflow-y: auto;\">\r\n              <table class=\"table table-bordered\">\r\n                <thead style=\"position: sticky; top: 0; background-color: white; z-index: 2;\">\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Agence</th>\r\n                    <th>Tél</th>\r\n                    <th>Email</th>\r\n                    <th>Sexe/Genre</th>\r\n                    <th>Représentant</th>\r\n                    <th>Nombre de CC</th>\r\n                    <th>Total</th>\r\n                    <th>Pourcentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(agenceError, index) in agenceErrorCounts\" :key=\"agenceError.Agence\" :class=\"{ 'bg-danger text-white': agenceError.Pourcentage > 1 }\">\r\n                    <td>{{ index + 1 }}</td>\r\n                    <td>{{ agenceError.Agence }}</td>\r\n                    <td>{{ agenceError['Format du Numéro de Téléphone Invalide'] }}</td>\r\n                    <td>{{ agenceError['Domaine ou Format de l\\'Email Invalide'] }}</td>\r\n                    <td>{{ agenceError['Sexe ou Genre Incorrect ou Manquant pour Entreprise'] }}</td>\r\n                    <td>{{ agenceError['Représentant Légal Manquant'] }}</td>\r\n                    <td>{{ agenceError['Nombre de CC'] }}</td>\r\n                    <td>\r\n                      {{ agenceError['Total Erreurs'] }}\r\n                    </td>\r\n                    <td>\r\n                      {{ (agenceError.Pourcentage).toFixed(2) }}%\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <!-- Fin du conteneur -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-4 row\">\r\n      <div class=\"mb-6 col-lg-12\">\r\n        <div class=\"card z-index-2\">\r\n          <div class=\"p-3 card-body\">\r\n            <!-- Replace the reports-bar-chart with a canvas -->\r\n            <canvas id=\"agenceChart\" width=\"400\" height=\"200\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Diagramme circulaire du pourcentage d'erreur par CC -->\r\n      <div class=\"col-lg-6 col-md-6 mb-4\">\r\n        <div class=\"card z-index-2\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Pourcentage d'Erreur par CC</h5>\r\n            <canvas id=\"ccErrorChart\" width=\"400\" height=\"400\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Diagramme circulaire du pourcentage de CC avec erreurs -->\r\n      <div class=\"col-lg-6 col-md-6 mb-4\">\r\n        <div class=\"card z-index-2\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Pourcentage de CC avec Erreurs</h5>\r\n            <canvas id=\"ccWithErrorChart\" width=\"400\" height=\"400\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"col-lg-4 col-md-6\">\r\n        <timeline-list \r\n          class=\"h-100\"\r\n          title=\"Podium des CC\"\r\n          description=\"<i class='fa fa-trophy text-warning'></i> Les hauts totaux d'erreurs\"\r\n        >\r\n        <timeline-item\r\n          v-for=\"(cc, index) in ccPodium\"\r\n          :key=\"index\"\r\n          :color=\"getPodiumColor(index)\"\r\n          :icon=\"index === 0 ? 'fa fa-star' : index === 1 ? 'fa fa-star-half-alt' : index === 2 ? 'fa fa-star-of-david' : 'fa fa-star-o'\"\r\n          :title=\"`${cc.CC} (${cc['Total Erreurs']} erreurs)`\"\r\n          :date-time=\"`Pourcentage: ${cc.Pourcentage.toFixed(2)}%`\"\r\n        />\r\n\r\n\r\n        </timeline-list>\r\n      </div>\r\n    </div>\r\n    <canvas id=\"agenceChart\" width=\"400\" height=\"200\"></canvas>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Chart from \"chart.js/auto\";\r\nimport MiniStatisticsCard from \"@/examples/Cards/MiniStatisticsCard.vue\";\r\n// import ReportsBarChart from \"@/examples/Charts/ReportsBarChart.vue\";\r\nimport TimelineList from \"./components/TimelineList.vue\";\r\nimport TimelineItem from \"./components/TimelineItem.vue\";\r\n// import ProjectsCard from \"./components/ProjectsCard.vue\";\r\nexport default {\r\n  components: {\r\n    MiniStatisticsCard,\r\n    // ReportsBarChart,\r\n    // ProjectsCard,\r\n    TimelineList,\r\n    TimelineItem,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      totalRows: 0,\r\n      rowsWithErrors: 0,\r\n      totalErrors: 0,\r\n      errorSummary: [],\r\n      columnTitles: {\r\n        \"Format du Numéro de Téléphone Invalide\": \"Téléphone Invalide\",\r\n        \"Domaine ou Format de l'Email Invalide\": \"Email Invalide\",\r\n        \"Sexe ou Genre Incorrect ou Manquant pour Entreprise\": \"Sexe/Genre\",\r\n        \"Représentant Légal Manquant\": \"Représentant \",\r\n      },\r\n      ccErrorCounts: [],\r\n      agenceErrorCounts: [],\r\n      iconBackground: '#5E72E4',\r\n      percentage_cc_with_errors : 0,\r\n      percentage_agences_with_errors : 0,\r\n      agenceLabels: [], // Labels pour le graphique\r\n      agenceTotals: [],\r\n      ccPodium: [],\r\n      searchCC: \"\",\r\n      searchAgence: \"\",\r\n      filterPercentage: \"\",\r\n\r\n    };\r\n  },\r\n\r\n  methods: {\r\n\r\n    createChart() {\r\n      if (this.chartInstance) {\r\n        this.chartInstance.destroy();\r\n      }\r\n      if (this.ccErrorChart) {\r\n        this.ccErrorChart.destroy();\r\n      }\r\n      if (this.ccWithErrorChart) {\r\n        this.ccWithErrorChart.destroy();\r\n      }\r\n\r\n      // Crée le graphique des erreurs par agence\r\n      console.log(\"Creating chart with data:\", this.agenceErrorCounts);\r\n      const agenceChartCtx = document.getElementById(\"agenceChart\").getContext(\"2d\");\r\n      const labels = this.agenceErrorCounts.map(agence => agence.Agence);\r\n      const data = this.agenceErrorCounts.map(agence => agence['Total Erreurs']);\r\n      \r\n      if (this.chartInstance) {\r\n        this.chartInstance.destroy();\r\n      }\r\n\r\n      this.chartInstance = new Chart(agenceChartCtx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: 'Total Erreurs par Agence',\r\n            data: data,\r\n            backgroundColor: '#FF5733',\r\n            borderColor: '#FF5733',\r\n            borderWidth: 1,\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      // Crée le graphique circulaire pour le pourcentage d'erreur par CC\r\n      const ccErrorChartCtx = document.getElementById(\"ccErrorChart\").getContext(\"2d\");\r\n      const ccErrorData = this.ccErrorCounts.map(cc => cc.Pourcentage);\r\n      const ccErrorLabels = this.ccErrorCounts.map(cc => cc.CC);\r\n      \r\n      this.ccErrorChart = new Chart(ccErrorChartCtx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: ccErrorLabels,\r\n          datasets: [{\r\n            data: ccErrorData,\r\n            backgroundColor: ccErrorData.map(() => this.getRandomColor()), // Génère des couleurs aléatoires\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(tooltipItem) {\r\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      // Crée le graphique circulaire pour le pourcentage de CC avec erreurs\r\n      const ccWithErrorChartCtx = document.getElementById(\"ccWithErrorChart\").getContext(\"2d\");\r\n      const ccWithErrorCount = this.ccErrorCounts.filter(cc => cc.Pourcentage > 0).length;\r\n      const ccTotalCount = this.ccErrorCounts.length;\r\n      const ccWithErrorPercentage = (ccWithErrorCount / ccTotalCount) * 100;\r\n      const ccWithoutErrorPercentage = 100 - ccWithErrorPercentage;\r\n\r\n      this.ccWithErrorChart = new Chart(ccWithErrorChartCtx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: ['CC avec erreurs', 'CC sans erreurs'],\r\n          datasets: [{\r\n            data: [ccWithErrorPercentage, ccWithoutErrorPercentage],\r\n            backgroundColor: ['#FF5733', '#d9d9d9'],\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(tooltipItem) {\r\n                  return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}%`;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    },\r\n\r\n    getRandomColor() {\r\n      const letters = '0123456789ABCDEF';\r\n      let color = '#';\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      return color;\r\n    },\r\n\r\n\r\n    getPodiumColor(index) {\r\n      if (index === 0) return \"gold\";\r\n      if (index === 1) return \"silver\";\r\n      if (index === 2) return \"bronze\";\r\n      return \"secondary\";\r\n    },\r\n\r\n    async uploadFile() {\r\n  const fileInput = document.getElementById('file-upload');\r\n  const validationIcon = document.getElementById('validation-icon');\r\n  \r\n  // Ajout d'une classe de bordure verte et fond de couleur pour indiquer la sélection du fichier\r\n  fileInput.style.border = \"2px solid green\";\r\n  fileInput.style.backgroundColor = \"#d4edda\";\r\n  \r\n  const file = fileInput.files[0];\r\n\r\n  if (!file) {\r\n    alert(\"Veuillez sélectionner un fichier.\");\r\n    return;\r\n  }\r\n\r\n  // Affichage du spinner et désactivation du bouton d'upload\r\n  document.getElementById(\"spinner\").classList.remove(\"d-none\");\r\n  document.getElementById(\"file-upload\").disabled = true;\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    // Envoi du fichier vers l'API\r\n    const response = await fetch('http://localhost:8000/validate-excel/', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    // Masquer le spinner et réactiver l'input\r\n    document.getElementById(\"spinner\").classList.add(\"d-none\");\r\n    document.getElementById(\"file-upload\").disabled = false;\r\n\r\n    if (response.ok) {\r\n      // Affichage de l'icône de validation en cas de succès\r\n      validationIcon.classList.remove(\"d-none\"); // Affiche l'icône de validation\r\n      validationIcon.style.color = \"green\"; // Change la couleur de l'icône en vert\r\n      this.updateStats(result.result); // Mise à jour des stats ou résultats\r\n    } else {\r\n      // Masquer l'icône et indiquer l'échec si nécessaire\r\n      validationIcon.classList.add(\"d-none\");\r\n      console.error(`Erreur : ${result.message}`);\r\n    }\r\n  } catch (error) {\r\n    // Si une erreur se produit lors de la requête, afficher un message d'erreur\r\n    console.error('Erreur:', error);\r\n    validationIcon.classList.add(\"d-none\"); // Masquer l'icône si une erreur se produit\r\n    alert(\"Une erreur est survenue lors de l'envoi du fichier.\");\r\n\r\n    // Masquer le spinner et réactiver le bouton\r\n    document.getElementById(\"spinner\").classList.add(\"d-none\");\r\n    document.getElementById(\"file-upload\").disabled = false;\r\n  }\r\n}\r\n\r\n,\r\n  \r\nupdateStats(result) {\r\n      this.totalRows = result.total_rows;\r\n      this.rowsWithErrors = result.rows_with_errors;\r\n      this.totalErrors = result.total_errors;\r\n      this.errorSummary = result.error_summary;\r\n      // this.ccErrorCounts = result.cc_error_counts.map((item) => ({\r\n      //   ...item,\r\n      //   Pourcentage: item.Pourcentage || 0, // Par défaut à 0 si non fourni\r\n      // }));\r\n\r\n      this.ccErrorCounts = result.cc_error_counts\r\n      .map((item) => ({\r\n        ...item,\r\n        Pourcentage: item.Pourcentage || 0, // Par défaut à 0 si non fourni\r\n      }))\r\n      .filter((item) => item['Total Erreurs'] > 0); // Filtrer ceux avec un total supérieur à 0\r\n\r\n      this.agenceErrorCounts = result.agence_error_counts || [];\r\n      this.agenceLabels = this.agenceErrorCounts.map((item) => item.Agence);\r\n      this.agenceTotals = this.agenceErrorCounts.map((item) => item['Total Erreurs']);\r\n      \r\n      console.log(\"agenceLabels:\", this.agenceLabels);\r\n      console.log(\"agenceTotals:\", this.agenceTotals);\r\n\r\n      this.percentage_cc_with_errors = result.percentage_cc_with_errors;\r\n      this.percentage_agences_with_errors = result.percentage_agences_with_errors;\r\n      this.ccPodium = result.cc_error_counts\r\n        .filter(cc => cc.Pourcentage > 5) // Filtrer les CC avec un pourcentage supérieur à 5%\r\n        .sort((a, b) => b['Total Erreurs'] - a['Total Erreurs']) // Trier par total d'erreurs\r\n\r\n      const labels = [...this.agenceLabels];\r\n      const totals = [...this.agenceTotals];\r\n\r\n      console.log(\"Labels normaux :\", labels);\r\n      console.log(\"Données normales :\", totals);\r\n\r\n      if (!result.agence_error_counts || result.agence_error_counts.length === 0) {\r\n        console.error(\"Aucune donnée trouvée pour les erreurs par agence.\");\r\n        return;\r\n      }\r\n      this.createChart();\r\n    },\r\n\r\n},\r\n\r\n  mounted() {\r\n    document.getElementById('upload-button').addEventListener('click', this.uploadFile);\r\n    console.log(\"agenceErrorCounts:\", this.agenceErrorCounts);\r\n\r\n    this.$nextTick(() => {\r\n      this.createChart(); // Create chart after data is set\r\n    });\r\n    },\r\n  \r\n  computed: {\r\n    filteredCCErrorCounts() {\r\n      return this.ccErrorCounts.filter((ccError) => {\r\n        const matchesCC = ccError.CC.toLowerCase().includes(this.searchCC.toLowerCase());\r\n        const matchesAgence = ccError.Agence.toLowerCase().includes(this.searchAgence.toLowerCase());\r\n\r\n        let matchesPercentage = true;\r\n        if (this.filterPercentage === \"high\") {\r\n          matchesPercentage = ccError.Pourcentage > 1;\r\n        } else if (this.filterPercentage === \"low\") {\r\n          matchesPercentage = ccError.Pourcentage <= 1;\r\n        }\r\n\r\n        return matchesCC && matchesAgence && matchesPercentage;\r\n      });\r\n    },\r\n  },\r\n  \r\n};\r\n\r\n</script>\r\n<style>\r\n.table {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  font-size: 14px;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  text-align: left;\r\n  padding: 8px;\r\n}\r\n\r\n.table-striped tbody tr:nth-of-type(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.table-bordered th,\r\n.table-bordered td {\r\n  border: 1px solid #dee2e6;\r\n}\r\n</style>"]}]}